{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:9999/api',\n  timeout: 10000 // Increased timeout\n});\n\n// Enhanced error handling\nconst handleApiError = error => {\n  if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout - Server is not responding');\n  } else if (!error.response) {\n    // No response at all (server probably down)\n    throw new Error('Server is not available. Please try again later.');\n  } else {\n    // Server responded with error status\n    throw new Error(error.response.data.message || 'API request failed');\n  }\n};\nexport const checkApiHealth = async () => {\n  try {\n    await api.get('/health');\n    return true;\n  } catch (error) {\n    handleApiError(error);\n    return false;\n  }\n};\nexport const getProjects = async () => {\n  try {\n    const isHealthy = await checkApiHealth();\n    if (!isHealthy) throw new Error('API is not healthy');\n    const response = await api.get('/projects');\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    return []; // Fallback empty array\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","handleApiError","error","code","Error","response","data","message","checkApiHealth","get","getProjects","isHealthy"],"sources":["/Users/sarathsaji/Desktop/React/Assign2/portfolio-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:9999/api',\n  timeout: 10000, // Increased timeout\n});\n\n// Enhanced error handling\nconst handleApiError = (error) => {\n  if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout - Server is not responding');\n  } else if (!error.response) {\n    // No response at all (server probably down)\n    throw new Error('Server is not available. Please try again later.');\n  } else {\n    // Server responded with error status\n    throw new Error(error.response.data.message || 'API request failed');\n  }\n};\n\nexport const checkApiHealth = async () => {\n  try {\n    await api.get('/health');\n    return true;\n  } catch (error) {\n    handleApiError(error);\n    return false;\n  }\n};\n\nexport const getProjects = async () => {\n  try {\n    const isHealthy = await checkApiHealth();\n    if (!isHealthy) throw new Error('API is not healthy');\n    \n    const response = await api.get('/projects');\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    return []; // Fallback empty array\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,IAAIA,KAAK,CAACC,IAAI,KAAK,cAAc,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D,CAAC,MAAM,IAAI,CAACF,KAAK,CAACG,QAAQ,EAAE;IAC1B;IACA,MAAM,IAAID,KAAK,CAAC,kDAAkD,CAAC;EACrE,CAAC,MAAM;IACL;IACA,MAAM,IAAIA,KAAK,CAACF,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAI,oBAAoB,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMX,GAAG,CAACY,GAAG,CAAC,SAAS,CAAC;IACxB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,CAAC;IACrB,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMH,cAAc,CAAC,CAAC;IACxC,IAAI,CAACG,SAAS,EAAE,MAAM,IAAIP,KAAK,CAAC,oBAAoB,CAAC;IAErD,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACY,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOJ,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,cAAc,CAACC,KAAK,CAAC;IACrB,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}